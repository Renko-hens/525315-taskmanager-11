{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/board.js","webpack:///./src/components/filter-menu.js","webpack:///./src/components/load-more-button.js","webpack:///./src/components/menu.js","webpack:///./src/components/no-task.js","webpack:///./src/components/sort.js","webpack:///./src/components/task-card.js","webpack:///./src/components/task-edit.js","webpack:///./src/components/tasks.js","webpack:///./src/const.js","webpack:///./src/main.js","webpack:///./src/mock/filter.js","webpack:///./src/mock/task.js","webpack:///./src/utils.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAA0C;;AAE1C;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,+DAAa;AACnC;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAA0C;;AAE1C;AACA,SAAS,aAAa;;AAEtB;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA,QAAQ;AACR;AACA,4BAA4B,MAAM;AAClC,UAAU,MAAM,uBAAuB,MAAM,WAAW,MAAM;AAC9D;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,+DAAa;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AChDA;AAAA;AAAA;AAA0C;;AAE1C;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,+DAAa;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAA0C;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,+DAAa;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACtDA;AAAA;AAAA;AAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,4DAAa;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAA0C;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,+DAAa;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AAAwC;AACc;;AAEtD;AACA,SAAS,kEAAkE;;AAE3E;AACA;;AAEA,kCAAkC,kBAAkB,GAAG,qDAAW,qBAAqB;AACvF,+BAA+B,4DAAU;;AAEzC;AACA;;AAEA;AACA;;AAEA;AACA,kCAAkC,MAAM,GAAG,YAAY,GAAG,cAAc,aAAa,GAAG;AACxF;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,2BAA2B;AACnG;AACA;AACA;AACA;AACA,sDAAsD,4BAA4B;AAClF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,YAAY;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA,+CAA+C,KAAK;AACpD,+CAA+C,KAAK;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,+DAAa;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACtFA;AAAA;AAAA;AAAA;AAAsD;AACA;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM,GAAG,MAAM;AACrC,wDAAwD,MAAM;AAC9D;AACA,mBAAmB,MAAM;AACzB,YAAY;AACZ;AACA;AACA,yBAAyB,MAAM,GAAG,MAAM;AACxC,8CAA8C,MAAM;AACpD,eAAe,MAAM;AACrB;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI,GAAG,MAAM;AACpC;AACA,mBAAmB,IAAI;AACvB,YAAY;AACZ;AACA,wDAAwD,IAAI,GAAG,MAAM;AACrE,eAAe,IAAI;AACnB;AACA,KAAK;AACL;AACA;;AAEA;AACA,SAAS,2CAA2C;;AAEpD;AACA;;AAEA,kCAAkC,kBAAkB,GAAG,qDAAW,qBAAqB;AACvF,+BAA+B,4DAAU;;AAEzC;AACA;AACA;;AAEA,0CAA0C,gDAAM;AAChD,wDAAwD,8CAAI;;AAE5D;AACA,6CAA6C,MAAM,GAAG,YAAY,GAAG,cAAc,aAAa,GAAG;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA,0DAA0D,6BAA6B;AACvF;;AAEA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,KAAK,GAAG,KAAK;AAC9C;AACA;AACA;AACA;AACA;AACA,6DAA6D,+BAA+B;AAC5F;;AAEA,kBAAkB;AAClB;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,+DAAa;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACvJA;AAAA;AAAA;AAA0C;;AAE1C;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,+DAAa;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEmC;;;;;;;;;;;;;ACnBnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACO;AACa;AACb;AACJ;AACH;AACF;AACA;AACM;AACV;AACI;AACC;;AAE/C;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA,4BAA4B,6DAAa;AACzC,gCAAgC,6DAAiB;;AAEjD;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;;AAGH,EAAE,sDAAM,mCAAmC,sDAAc;AACzD;;;AAGA;AACA;;AAEA;AACA,IAAI,sDAAM,kCAAkC,2DAAgB,iBAAiB,sDAAc;AAC3F;AACA;;AAEA,EAAE,sDAAM,kCAAkC,wDAAa,iBAAiB,sDAAc;AACtF,EAAE,sDAAM,kCAAkC,yDAAc,iBAAiB,sDAAc;;AAEvF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;;AAEA;;AAEA,sCAAsC,oEAAuB;AAC7D,EAAE,sDAAM,oEAAoE,sDAAc;;AAE1F;AACA;AACA;;AAEA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA,cAAc,gEAAa;AAC3B,gBAAgB,qEAAe;;AAE/B,sDAAM,wBAAwB,wDAAa,iBAAiB,sDAAc;AAC1E,sDAAM,sBAAsB,+DAAe,wBAAwB,sDAAc;;AAEjF,2BAA2B,yDAAc;AACzC,sDAAM,+CAA+C,sDAAc;AACnE;;;;;;;;;;;;;AC/IA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEyB;;;;;;;;;;;;;ACbzB;AAAA;AAAA;AAAA;AAAmC;;AAEnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA,yBAAyB;AACzB;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B,gDAAM;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGqC;;;;;;;;;;;;;ACnErC;AAAA;AAAA;AAAA;AAAA;AAAO;AACP;AACA;AACA;;AAEA;AACA,0BAA0B,MAAM;AAChC;;AAEO;AACP;AACA;;AAEA,YAAY,MAAM,GAAG,QAAQ;AAC7B;;AAEO;AACP;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","import {createElement} from \"../utils.js\";\n\nconst createBoardTemplate = () => {\n  return (\n    `<section class=\"board container\">\n    </section>`\n  );\n};\n\nexport default class Board {\n  constructor() {\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createBoardTemplate();\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {createElement} from \"../utils.js\";\n\nconst createFilterMarkup = (filter, isChecked) => {\n  const {title, count} = filter;\n\n  return (\n    `<input\n      type=\"radio\"\n      id=\"filter__${title}\"\n      class=\"filter__input visually-hidden\"\n      name=\"filter\"\n      ${isChecked ? `checked` : ``}\n      />\n      <label for=\"filter__${title}\" class=\"filter__label\">\n        ${title}<span class=\"filter__${title}-count\"> ${count}</span></label\n      >`);\n};\n\nconst createFilterMenuTemplate = (filters) => {\n  const filtersMarkup = filters.map((filter, index) => createFilterMarkup(filter, index === 0)).join(`\\n`);\n\n  return (\n    `<section class=\"main__filter filter container\">\n      ${filtersMarkup}\n    </section>`);\n};\n\nexport default class Filter {\n  constructor(filters) {\n    this._filters = filters;\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createFilterMenuTemplate(this._filters);\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {createElement} from \"../utils.js\";\n\nconst createLoadMoreButton = () => {\n  return (\n    `<button class=\"load-more\" type=\"button\">\n      load more\n    </button>`);\n};\n\nexport default class LoadMoreButton {\n  constructor() {\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createLoadMoreButton();\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {createElement} from \"../utils.js\";\n\nconst createMenuTemplate = () => {\n  return (\n    `<section class=\"control__btn-wrap\">\n      <input\n        type=\"radio\"\n        name=\"control\"\n        id=\"control__new-task\"\n        class=\"control__input visually-hidden\"\n      />\n      <label for=\"control__new-task\" class=\"control__label control__label--new-task\"\n        >+ ADD NEW TASK</label\n      >\n      <input\n        type=\"radio\"\n        name=\"control\"\n        id=\"control__task\"\n        class=\"control__input visually-hidden\"\n        checked\n      />\n      <label for=\"control__task\" class=\"control__label\">TASKS</label>\n      <input\n        type=\"radio\"\n        name=\"control\"\n        id=\"control__statistic\"\n        class=\"control__input visually-hidden\"\n      />\n      <label for=\"control__statistic\" class=\"control__label\"\n        >STATISTICS</label\n      >\n    </section>`);\n};\n\nexport default class Menu {\n  constructor() {\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createMenuTemplate();\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {createElement} from \"../utils\";\n\nconst createNoTaskTemplate = () => {\n  return (\n    `<p class = \"board__no-tasks\">\n      Click «ADD NEW TASK» in menu to create your first task\n    </p>`);\n};\n\nexport default class NoTasks {\n  constructor() {\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createNoTaskTemplate();\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n\n","import {createElement} from \"../utils.js\";\n\nconst createSortTemplate = () => {\n  return (\n    `<div class=\"board__filter-list\">\n      <a href=\"#\" class=\"board__filter\" data-sort-type=\"default\">SORT BY DEFAULT</a>\n      <a href=\"#\" class=\"board__filter\" data-sort-type=\"date-up\">SORT BY DATE up</a>\n      <a href=\"#\" class=\"board__filter\" data-sort-type=\"date-down\">SORT BY DATE down</a>\n    </div>`);\n};\n\nexport default class Sort {\n  constructor() {\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createSortTemplate();\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {MONTH_NAMES} from \"../const.js\";\nimport {createElement, formatTime} from \"../utils.js\";\n\nconst createTaskCardTemplate = (task, id) => {\n  const {description, dueDate, repeatingDays, color, isArchive, isFavorite} = task;\n\n  const isExpired = dueDate instanceof Date && dueDate < Date.now();\n  const isDateShowing = !!dueDate;\n\n  const date = isDateShowing ? `${dueDate.getDate()} ${MONTH_NAMES[dueDate.getMonth()]}` : ``;\n  const time = isDateShowing ? formatTime(dueDate) : ``;\n\n  const repeatClass = Object.values(repeatingDays).some(Boolean) ? `card--repeat` : ``;\n  const deadlineClass = isExpired ? `card--deadline` : ``;\n\n  const archiveButtonInactiveClass = isArchive ? `` : `card__btn--disabled`;\n  const favoriteButtonInactiveClass = isFavorite ? `` : `card__btn--disabled`;\n\n  return (\n    `<article class=\"card card--${color} ${repeatClass} ${deadlineClass}\" data-id=\"${id}\">\n      <div class=\"card__form\">\n        <div class=\"card__inner\">\n          <div class=\"card__control\">\n            <button type=\"button\" class=\"card__btn card__btn--edit\">\n              edit\n            </button>\n            <button type=\"button\" class=\"card__btn card__btn--archive ${archiveButtonInactiveClass}\">\n              archive\n            </button>\n            <button\n              type=\"button\"\n              class=\"card__btn card__btn--favorites ${favoriteButtonInactiveClass}\"\n            >\n              favorites\n            </button>\n          </div>\n\n          <div class=\"card__color-bar\">\n            <svg class=\"card__color-bar-wave\" width=\"100%\" height=\"10\">\n              <use xlink:href=\"#wave\"></use>\n            </svg>\n          </div>\n\n          <div class=\"card__textarea-wrap\">\n            <p class=\"card__text\">${description}</p>\n          </div>\n\n          <div class=\"card__settings\">\n            <div class=\"card__details\">\n              <div class=\"card__dates\">\n                <div class=\"card__date-deadline\">\n                  <p class=\"card__input-deadline-wrap\">\n                    <span class=\"card__date\">${date}</span>\n                    <span class=\"card__time\">${time}</span>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </article>`);\n};\n\n\nexport default class Task {\n  constructor(task) {\n    this._task = task;\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createTaskCardTemplate(this._task, this.id);\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {COLORS, DAYS, MONTH_NAMES} from \"../const.js\";\nimport {createElement, formatTime} from \"../utils.js\";\n\nconst createColorsMarkup = (colors, currentColor) => {\n  return colors\n    .map((color, index) => {\n      return (\n        `<input\n          type=\"radio\"\n          id=\"color-${color}-${index}\"\n          class=\"card__color-input card__color-input--${color} visually-hidden\"\n          name=\"color\"\n          value=\"${color}\"\n          ${currentColor === color ? `checked` : ``}\n          />\n          <label\n            for=\"color-${color}-${index}\"\n            class=\"card__color card__color--${color}\"\n            >${color}</label\n          >`);\n    }).join(`\\n`);\n};\n\nconst createRepeatingDaysMarkup = (days, repeatingDays) => {\n  return days\n    .map((day, index) =>{\n      const isChecked = repeatingDays[day];\n      return (\n        `<input\n          class=\"visually-hidden card__repeat-day-input\"\n          type=\"checkbox\"\n          id=\"repeat-${day}-${index}\"\n          name=\"repeat\"\n          value=\"${day}\"\n          ${isChecked ? `checked` : ``}\n          />\n          <label class=\"card__repeat-day\" for=\"repeat-${day}-${index}\"\n            >${day}</label\n          >`);\n    })\n    .join(`\\n`);\n};\n\nconst createTaskEditTemplate = (task, id) => {\n  const {description, dueDate, color, repeatingDays} = task;\n\n  const isExpired = dueDate instanceof Date && dueDate < Date.now();\n  const isDateShowing = !!dueDate;\n\n  const date = isDateShowing ? `${dueDate.getDate()} ${MONTH_NAMES[dueDate.getMonth()]}` : ``;\n  const time = isDateShowing ? formatTime(dueDate) : ``;\n\n  const isRepeatingTask = Object.values(repeatingDays).some(Boolean);\n  const repeatClass = isRepeatingTask ? `card--repeat` : ``;\n  const deadlineClass = isExpired ? `card--deadline` : ``;\n\n  const colorsMarkup = createColorsMarkup(COLORS, color);\n  const repeatingDaysMarkup = createRepeatingDaysMarkup(DAYS, repeatingDays);\n\n  return (\n    `<article class=\"card card--edit card--${color} ${repeatClass} ${deadlineClass}\" data-id=\"${id}\">\n      <form class=\"card__form\" method=\"get\">\n        <div class=\"card__inner\">\n          <div class=\"card__color-bar\">\n            <svg class=\"card__color-bar-wave\" width=\"100%\" height=\"10\">\n              <use xlink:href=\"#wave\"></use>\n            </svg>\n          </div>\n\n          <div class=\"card__textarea-wrap\">\n            <label>\n              <textarea\n                class=\"card__text\"\n                placeholder=\"Start typing your text here...\"\n                name=\"text\"\n              >${description}</textarea>\n            </label>\n          </div>\n\n          <div class=\"card__settings\">\n            <div class=\"card__details\">\n              <div class=\"card__dates\">\n                <button class=\"card__date-deadline-toggle\" type=\"button\">\n                  date: <span class=\"card__date-status\">${isDateShowing ? `yes` : `no`}</span>\n                </button>\n\n                ${isDateShowing ? `\n                  <fieldset class=\"card__date-deadline\">\n                    <label class=\"card__input-deadline-wrap\">\n                      <input\n                        class=\"card__date\"\n                        type=\"text\"\n                        placeholder=\"\"\n                        name=\"date\"\n                        value=\"${date} ${time}\"\n                      />\n                    </label>\n                  </fieldset>\n                ` : ``}\n                <button class=\"card__repeat-toggle\" type=\"button\">\n                  repeat:<span class=\"card__repeat-status\">${isRepeatingTask ? `yes` : `no`}</span>\n                </button>\n\n                ${isRepeatingTask ? `\n                <fieldset class=\"card__repeat-days\">\n                  <div class=\"card__repeat-days-inner\">\n                    ${repeatingDaysMarkup}\n                  </div>\n                </fieldset>\n                ` : ``}\n              </div>\n            </div>\n\n            <div class=\"card__colors-inner\">\n              <h3 class=\"card__colors-title\">Color</h3>\n              <div class=\"card__colors-wrap\">\n                ${colorsMarkup}\n              </div>\n            </div>\n          </div>\n\n          <div class=\"card__status-btns\">\n            <button class=\"card__save\" type=\"submit\">save</button>\n            <button class=\"card__delete\" type=\"button\">delete</button>\n          </div>\n        </div>\n      </form>\n    </article>`);\n};\n\nexport default class TaskEdit {\n  constructor(task) {\n    this._task = task;\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createTaskEditTemplate(this._task, this.id);\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {createElement} from \"../utils.js\";\n\nconst createTasksTemplate = () => {\n  return (\n    `<div class=\"board__tasks\">\n    </div>`);\n};\n\nexport default class Tasks {\n  constructor() {\n    this._element = null;\n  }\n\n  getTemplate() {\n    return createTasksTemplate();\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","const COLORS = [`black`, `yellow`, `blue`, `green`, `pink`];\n\nconst DAYS = [`mo`, `tu`, `we`, `th`, `fr`, `sa`, `su`];\n\nconst MONTH_NAMES = [\n  `January`,\n  `February`,\n  `March`,\n  `April`,\n  `May`,\n  `June`,\n  `July`,\n  `August`,\n  `September`,\n  `October`,\n  `November`,\n  `December`,\n];\n\nexport {COLORS, DAYS, MONTH_NAMES};\n","import BoardComponent from './components/board';\nimport FilterComponent from './components/filter-menu';\nimport LoadMoreButtonComponent from './components/load-more-button';\nimport TaskEditComponent from './components/task-edit';\nimport TaskComponent from './components/task-card';\nimport TasksComponent from './components/tasks';\nimport MenuComponent from './components/menu';\nimport SortComponent from './components/sort';\nimport NoTasksComponent from './components/no-task';\nimport {generateTasks} from './mock/task';\nimport {generateFilters} from './mock/filter';\nimport {render, RenderPosition} from \"./utils\";\n\nconst TASK_COUNT = 20;\nconst SHOWING_TASKS_COUNT_ON_START = 8;\nconst SHOWING_TASKS_COUNT_BY_BUTTON = 8;\n\nlet currentTaskCard = null;\nlet currentTaskEdit = null;\n\n\nconst replaceTaskToEdit = (taskList, taskCard, taskEdit) => {\n  taskList.replaceChild(taskEdit, taskCard);\n};\n\nconst replaceEditToTask = (taskList, taskCard, taskEdit) => {\n  taskList.replaceChild(taskCard, taskEdit);\n};\n\n\nconst renderTask = (taskListElement, task) => {\n  const taskComponent = new TaskComponent(task);\n  const taskEditComponent = new TaskEditComponent(task);\n\n  const taskCardElement = taskComponent.getElement();\n  const taskEditElement = taskEditComponent.getElement();\n\n\n  const escKeyDownHandler = (evt) => {\n    const isEscKey = evt.key === `Escape` || evt.key === `Esc`;\n\n    if (isEscKey && currentTaskCard !== null) {\n      replaceEditToTask(taskListElement, currentTaskCard.getElement(), currentTaskEdit.getElement());\n\n      document.removeEventListener(`keydown`, escKeyDownHandler);\n\n      currentTaskCard = null;\n      currentTaskEdit = null;\n    }\n  };\n\n  const editButton = taskCardElement.querySelector(`.card__btn--edit`);\n\n  editButton.addEventListener(`click`, () => {\n    if (currentTaskCard !== null) {\n      replaceEditToTask(taskListElement, currentTaskCard.getElement(), currentTaskEdit.getElement());\n      document.removeEventListener(`keydown`, escKeyDownHandler);\n    }\n\n    replaceTaskToEdit(taskListElement, taskCardElement, taskEditElement);\n    document.addEventListener(`keydown`, escKeyDownHandler);\n\n    currentTaskCard = taskComponent;\n    currentTaskEdit = taskEditComponent;\n  });\n\n  const editForm = taskEditElement.querySelector(`form`);\n  editForm.addEventListener(`submit`, (evt) => {\n    evt.preventDefault();\n    replaceEditToTask(taskListElement, taskCardElement, taskEditElement);\n\n    document.removeEventListener(`keydown`, escKeyDownHandler);\n\n    currentTaskCard = null;\n    currentTaskEdit = null;\n  });\n\n\n  render(taskListElement, taskCardElement, RenderPosition.BEFOREEND);\n};\n\n\nconst renderBoard = (boardComponent, tasks) => {\n  const isAllTasksArchived = tasks.every((task) => task.isArchive);\n\n  if (isAllTasksArchived) {\n    render(boardComponent.getElement(), new NoTasksComponent().getElement(), RenderPosition.BEFOREEND);\n    return;\n  }\n\n  render(boardComponent.getElement(), new SortComponent().getElement(), RenderPosition.BEFOREEND);\n  render(boardComponent.getElement(), new TasksComponent().getElement(), RenderPosition.BEFOREEND);\n\n  const taskListElement = boardComponent.getElement().querySelector(`.board__tasks`);\n  let showingTasksCount = SHOWING_TASKS_COUNT_ON_START;\n\n  const deleteLoadMoreButton = () => {\n    loadMoreButtonComponent.getElement().remove();\n    loadMoreButtonComponent.removeElement();\n  };\n\n  const allHidingTasks = () => {\n    if (showingTasksCount >= tasks.length) {\n      deleteLoadMoreButton();\n    }\n  };\n\n  for (let i = 0; i < showingTasksCount; i++) {\n    if (tasks[i]) {\n      renderTask(taskListElement, tasks[i], i);\n    }\n  }\n\n  allHidingTasks();\n\n  const loadMoreButtonComponent = new LoadMoreButtonComponent();\n  render(boardComponent.getElement(), loadMoreButtonComponent.getElement(), RenderPosition.BEFOREEND);\n\n  loadMoreButtonComponent.getElement().addEventListener(`click`, () => {\n    const prevTasksCount = showingTasksCount;\n    showingTasksCount = showingTasksCount + SHOWING_TASKS_COUNT_BY_BUTTON;\n\n    for (let i = prevTasksCount; i < showingTasksCount; i++) {\n      if (tasks[i]) {\n        renderTask(taskListElement, tasks[i], i);\n      }\n    }\n\n    allHidingTasks();\n  });\n};\n\nconst siteMainElement = document.querySelector(`.main`);\nconst siteHeaderElement = siteMainElement.querySelector(`.main__control`);\n\nconst tasks = generateTasks(TASK_COUNT);\nconst filters = generateFilters();\n\nrender(siteHeaderElement, new MenuComponent().getElement(), RenderPosition.BEFOREEND);\nrender(siteMainElement, new FilterComponent(filters).getElement(), RenderPosition.BEFOREEND);\n\nconst boardComponent = new BoardComponent();\nrender(siteMainElement, boardComponent.getElement(), RenderPosition.BEFOREEND);\nrenderBoard(boardComponent, tasks);\n","const filterNames = [\n  `all`, `overdue`, `today`, `favorites`, `repeating`, `archive`\n];\n\nconst generateFilters = () => {\n  return filterNames.map((name) => {\n    return {\n      title: name,\n      count: Math.floor(Math.random() * 20),\n    };\n  });\n};\n\nexport {generateFilters};\n","import {COLORS} from \"../const.js\";\n\nconst descriptionItems = [\n  `Изучить теорию`,\n  `Сделать домашку`,\n  `Пройти интенсив на соточку`,\n];\n\nconst defaultRepeatingDays = {\n  \"mo\": false,\n  \"tu\": false,\n  \"we\": false,\n  \"th\": false,\n  \"fr\": false,\n  \"sa\": false,\n  \"su\": false,\n};\n\n\nconst getRandomIntegerNumber = (min, max) => {\n  return min + Math.floor(Math.random() * (max - min));\n};\n\nconst getRandomArrayItem = (array) => {\n  const randomIndex = getRandomIntegerNumber(0, array.length);\n\n  return array[randomIndex];\n};\n\nconst getRandomDate = () => {\n  const targetDate = new Date();\n  const sign = Math.random() > 0.5 ? 1 : -1;\n  const diffValue = sign * getRandomIntegerNumber(0, 8);\n\n  targetDate.setDate(targetDate.getDate() + diffValue);\n\n  return targetDate;\n};\n\nconst getBoolRandom = () => Math.random() > 0.5;\n\nconst generateRepeatingDays = () => {\n  return Object.assign({}, defaultRepeatingDays, {\n    \"mo\": Math.random() > 0.5,\n  });\n};\n\nconst generateTask = () => {\n  const dueDate = Math.random() > 0.5 ? null : getRandomDate();\n\n  return {\n    description: getRandomArrayItem(descriptionItems),\n    dueDate,\n    repeatingDays: dueDate ? defaultRepeatingDays : generateRepeatingDays(),\n    color: getRandomArrayItem(COLORS),\n    isArchive: getBoolRandom(),\n    isFavorite: getBoolRandom(),\n  };\n};\n\nconst generateTasks = (count) => {\n  return new Array(count)\n    .fill(``)\n    .map(generateTask);\n};\n\n\nexport {generateTask, generateTasks};\n","export const RenderPosition = {\n  AFTERBEGIN: `afterbegin`,\n  BEFOREEND: `beforeend`\n};\n\nconst castTimeFormat = (value) => {\n  return value < 10 ? `0${value}` : String(value);\n};\n\nexport const formatTime = (date) => {\n  const hours = castTimeFormat(date.getHours() % 12);\n  const minutes = castTimeFormat(date.getMinutes());\n\n  return `${hours}:${minutes}`;\n};\n\nexport const createElement = (template) => {\n  const newElement = document.createElement(`div`);\n  newElement.innerHTML = template;\n\n  return newElement.firstChild;\n};\n\nexport const render = (container, element, place) => {\n  switch (place) {\n    case RenderPosition.AFTERBEGIN:\n      container.prepend(element);\n      break;\n    case RenderPosition.BEFOREEND:\n      container.append(element);\n      break;\n  }\n};\n"],"sourceRoot":""}